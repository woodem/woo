:mod:`woo.triangulated`
====================================

.. inheritance-diagram:: woo.triangulated
   :parts: 2

.. automodule:: woo.triangulated
   :members:
   :undoc-members:
   :exclude-members: MeshImport

.. autoclass:: MeshImport
   :members:
   :exclude-members: file, preScale, node, halfThick, fakeVel, tessMaxBox, tagged, color, smooth, __init__, __getstate__, __setstate__
   :special-members:


   [:woosrc:`py/triangulated.py <py/triangulated.py#L268>`]

   .. attribute:: file (= '')

      Mesh file to be imported (STL)

      [type: str, existing filename]

   .. attribute:: preScale (= 1.0)

      Scaling, applied before other transformations.

      [type: float]

   .. attribute:: node (= None)

      Node defining local coordinate system for importing (already :obj:`prescaled <preScale>`) mesh; if not given, global coordinate system is assumed.

      [type: Node]

   .. attribute:: halfThick (= 0.0)

      Half thickness (:obj:`woo.dem.Facet.halfThick`) assigned to all created facets. If zero, don't assign :obj:`~woo.dem.Facet.halfThick`.

      [type: float, unit: m, preferred unit: mm]

   .. attribute:: fakeVel (= Vector3(0,0,0))

      :obj:`Fake surface velocity <woo.dem.Facet.fakeVel>` set (as-is) on all imported facets; if ``(0,0,0)`` (default), nothing is set.

      [type: Vector3, unit: m/s]

   .. attribute:: tessMaxBox (= 0.0)

      Some importers (STL) can tesselated triangles so that their bounding box dimension does not exceed :obj:`tessMaxBox`. If non-positive, no tesselation will be done.

      [type: float, unit: m, preferred unit: mm]

   .. attribute:: tagged (= False)

      Use :obj:`woo.dem.DemDataTagged` to keep information about node number at input; this is only supported for some formats, and exception will be raise if used with format not supporting it }e.g. STL does not store vertices)

      [type: bool]

   .. attribute:: color (= nan)

      Pass resulting particle color (scalar) when importing; only effective for formats which support it (STL). *nan* disables

      [type: float]

   .. attribute:: smooth (= False)

      Automatically call :obj:`woo.dem.Facet.computeNeighborAngles` for smoother contact transitions.

      [type: bool]

:mod:`woo._triangulated`
-------------------------------------

.. note:: This module is imported into the :obj:`woo.triangulated` module automatically; refer to its objects through :obj:`woo.triangulated`.

.. automodule:: woo._triangulated
   :members:
   :undoc-members:
   :exclude-members: MeshImport

